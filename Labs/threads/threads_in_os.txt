במערכות הפעלה, "תהליכון" (Thread) מתייחס לפעילות סדרתית אחת שמתבצעת בתוך תהליך. תהליכים אלה נקראים גם "חוטי ביצוע" או "תהליכי שליטה". כל תהליך במערכת הפעלה יכול להריץ תהליכון, וניתן לומר שתהליך יכול להכיל מספר תהליכונים.

### למה אנחנו צריכים תהליכונים?
תהליכונים רצים במקביל ומשפרים את ביצועי היישום. לכל תהליכון יש מצב CPU ומחסנית (stack) משלו, אבל הם משתפים את מרחב הזיכרון של התהליך ואת הסביבה. תהליכונים יכולים לשתף נתונים משותפים ולכן הם לא צריכים להשתמש בתקשורת בין תהליכים (IPC). כמו בתהליכים, לתהליכונים יש מצבים כמו מוכן, מתבצע, חסום וכו'. ניתן להקצות עדיפויות לתהליכונים בדיוק כמו לתהליכים, והתהליכון בעל העדיפות הגבוהה ביותר מתוזמן ראשון. לכל תהליכון יש את בלוק בקרת התהליכון שלו (TCB). כמו בתהליכים, מתרחש מעבר הקשר (context switch) עבור התהליכון, ותוכן הרישומים נשמר ב-TCB. מכיוון שהתהליכונים משתפים את אותו מרחב זיכרון ומשאבים, נדרשת סנכרון עבור הפעילויות השונות של התהליכונים.

### מרכיבי תהליכונים
אלו המרכיבים הבסיסיים של מערכת ההפעלה:

- מרחב מחסנית (Stack Space)
- סט רישומים (Register Set)
- מונה תכנית (Program Counter)

### סוגי תהליכונים במערכת הפעלה
ישנם שני סוגים של תהליכונים, כפי שמתואר להלן:

1. תהליכונים ברמת המשתמש (User-level threads)
2. תהליכונים ברמת הליבה (Kernel-level threads)

תהליכונים ברמת המשתמש מנוהלים על ידי ספריות משתמש, בזמן שתהליכונים ברמת הליבה מנוהלים על ידי מערכת ההפעלה עצמה.
